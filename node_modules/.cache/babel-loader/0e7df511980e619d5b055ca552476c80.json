{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/dage/Downloads/interview-test/BMO-FrontEndDeveloper/finding-restaurants/src/components/Restaurants.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport thumb from \"../img/default-food-image.png\";\n\nconst Restaurants = ({\n  restaurants\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: restaurants.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-results\",\n      children: \"Nothing's Here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"restaurants-container\",\n      children: restaurants.map(restaurant => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restaurant-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-thumb\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: restaurant.restaurant.thumb || thumb,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restaurant-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"restaurant-title\",\n                children: restaurant.restaurant.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"restaurant-cuisines\",\n                children: restaurant.restaurant.cuisines\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"restaurant-address\",\n              children: restaurant.restaurant.location.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 17\n          }, this)]\n        }, restaurant.restaurant.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Restaurants;\nRestaurants.propTypes = {\n  restaurants: PropTypes.arrayOf(PropTypes.shape({\n    restaurant: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      thumb: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      cuisines: PropTypes.string.isRequired,\n      location: PropTypes.shape({\n        address: PropTypes.string.isRequired\n      }).isRequired\n    })\n  })).isRequired\n};\nexport default Restaurants;\n\nvar _c;\n\n$RefreshReg$(_c, \"Restaurants\");","map":{"version":3,"sources":["/Users/dage/Downloads/interview-test/BMO-FrontEndDeveloper/finding-restaurants/src/components/Restaurants.js"],"names":["React","PropTypes","thumb","Restaurants","restaurants","length","map","restaurant","name","cuisines","location","address","id","propTypes","arrayOf","shape","string","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,+BAAlB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACvC,sBACE;AAAA,cACGA,WAAW,CAACC,MAAZ,KAAuB,CAAvB,gBACC;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,gBACGD,WAAW,CAACE,GAAZ,CAAiBC,UAAD,IAAgB;AAC/B,4BACE;AACE,UAAA,SAAS,EAAC,sBADZ;AAAA,kCAIE;AAAK,YAAA,SAAS,EAAC,kBAAf;AAAA,mCACE;AAAK,cAAA,GAAG,EAAEA,UAAU,CAACA,UAAX,CAAsBL,KAAtB,IAA+BA,KAAzC;AAAgD,cAAA,GAAG,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF,eAOE;AAAK,YAAA,SAAS,EAAC,oBAAf;AAAA,oCACE;AAAA,sCACE;AAAK,gBAAA,SAAS,EAAC,kBAAf;AAAA,0BACGK,UAAU,CAACA,UAAX,CAAsBC;AADzB;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE;AAAK,gBAAA,SAAS,EAAC,qBAAf;AAAA,0BACGD,UAAU,CAACA,UAAX,CAAsBE;AADzB;AAAA;AAAA;AAAA;AAAA,sBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eASE;AAAK,cAAA,SAAS,EAAC,oBAAf;AAAA,wBACGF,UAAU,CAACA,UAAX,CAAsBG,QAAtB,CAA+BC;AADlC;AAAA;AAAA;AAAA;AAAA,oBATF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA,WAEOJ,UAAU,CAACA,UAAX,CAAsBK,EAF7B;AAAA;AAAA;AAAA;AAAA,gBADF;AAuBD,OAxBA;AADH;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CApCD;;KAAMT,W;AAsCNA,WAAW,CAACU,SAAZ,GAAwB;AACtBT,EAAAA,WAAW,EAAEH,SAAS,CAACa,OAAV,CACXb,SAAS,CAACc,KAAV,CAAgB;AACdR,IAAAA,UAAU,EAAEN,SAAS,CAACc,KAAV,CAAgB;AAC1BH,MAAAA,EAAE,EAAEX,SAAS,CAACe,MAAV,CAAiBC,UADK;AAE1Bf,MAAAA,KAAK,EAAED,SAAS,CAACe,MAAV,CAAiBC,UAFE;AAG1BT,MAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBC,UAHG;AAI1BR,MAAAA,QAAQ,EAAER,SAAS,CAACe,MAAV,CAAiBC,UAJD;AAK1BP,MAAAA,QAAQ,EAAET,SAAS,CAACc,KAAV,CAAgB;AACxBJ,QAAAA,OAAO,EAAEV,SAAS,CAACe,MAAV,CAAiBC;AADF,OAAhB,EAEPA;AAPuB,KAAhB;AADE,GAAhB,CADW,EAYXA;AAboB,CAAxB;AAgBA,eAAed,WAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport thumb from \"../img/default-food-image.png\";\n\nconst Restaurants = ({ restaurants }) => {\n  return (\n    <div>\n      {restaurants.length === 0 ? (\n        <div className=\"no-results\">Nothing's Here</div>\n      ) : (\n        <div className=\"restaurants-container\">\n          {restaurants.map((restaurant) => {\n            return (\n              <div\n                className=\"restaurant-container\"\n                key={restaurant.restaurant.id}\n              >\n                <div className=\"restaurant-thumb\">\n                  <img src={restaurant.restaurant.thumb || thumb} alt=\"\" />\n                </div>\n                <div className=\"restaurant-content\">\n                  <div>\n                    <div className=\"restaurant-title\">\n                      {restaurant.restaurant.name}\n                    </div>\n                    <div className=\"restaurant-cuisines\">\n                      {restaurant.restaurant.cuisines}\n                    </div>\n                  </div>\n                  <div className=\"restaurant-address\">\n                    {restaurant.restaurant.location.address}\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nRestaurants.propTypes = {\n  restaurants: PropTypes.arrayOf(\n    PropTypes.shape({\n      restaurant: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        thumb: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        cuisines: PropTypes.string.isRequired,\n        location: PropTypes.shape({\n          address: PropTypes.string.isRequired,\n        }).isRequired,\n      }),\n    })\n  ).isRequired,\n};\n\nexport default Restaurants;\n"]},"metadata":{},"sourceType":"module"}