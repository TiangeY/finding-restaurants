{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { FETCH_RESTAURANTS } from \"./restaurants.actions\";\nimport { fetchRestaurantsSuccessAction } from \"./restaurants.actions\";\nimport CitiesApi from \"../../services/CitiesApi.js\";\nimport RestaurantsApi from \"../../services/RestaurantsApi.js\";\nexport function* fetchRestaurants(action) {\n  try {\n    const cities = yield call(CitiesApi.get, action.inputValue);\n    const city = cities.data.location_suggestions[0];\n\n    if (city) {\n      if (action.refineValue) {\n        const restaurants = yield call(RestaurantsApi.get, city.id, action.refineValue);\n        yield put(fetchRestaurantsSuccessAction(restaurants.data.restaurants));\n      } else {\n        const restaurants = yield call(RestaurantsApi.getMore, city.id);\n        yield put(fetchRestaurantsSuccessAction(restaurants.data.restaurants));\n      }\n    } else {\n      yield put(fetchRestaurantsSuccessAction([]));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* watchRestaurants() {\n  yield takeLatest(FETCH_RESTAURANTS, fetchRestaurants);\n}","map":{"version":3,"sources":["/Users/dage/Downloads/interview-test/BMO-FrontEndDeveloper/finding-restaurants/src/redux/restaurants/restaurants.sagas.js"],"names":["call","put","takeLatest","FETCH_RESTAURANTS","fetchRestaurantsSuccessAction","CitiesApi","RestaurantsApi","fetchRestaurants","action","cities","get","inputValue","city","data","location_suggestions","refineValue","restaurants","id","getMore","error","console","log","watchRestaurants"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,6BAAT,QAA8C,uBAA9C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AAEA,OAAO,UAAUC,gBAAV,CAA2BC,MAA3B,EAAmC;AACxC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMT,IAAI,CAACK,SAAS,CAACK,GAAX,EAAgBF,MAAM,CAACG,UAAvB,CAAzB;AACA,UAAMC,IAAI,GAAGH,MAAM,CAACI,IAAP,CAAYC,oBAAZ,CAAiC,CAAjC,CAAb;;AACA,QAAIF,IAAJ,EAAU;AACR,UAAIJ,MAAM,CAACO,WAAX,EAAwB;AACtB,cAAMC,WAAW,GAAG,MAAMhB,IAAI,CAC5BM,cAAc,CAACI,GADa,EAE5BE,IAAI,CAACK,EAFuB,EAG5BT,MAAM,CAACO,WAHqB,CAA9B;AAKA,cAAMd,GAAG,CAACG,6BAA6B,CAACY,WAAW,CAACH,IAAZ,CAAiBG,WAAlB,CAA9B,CAAT;AACD,OAPD,MAOO;AACL,cAAMA,WAAW,GAAG,MAAMhB,IAAI,CAACM,cAAc,CAACY,OAAhB,EAAyBN,IAAI,CAACK,EAA9B,CAA9B;AACA,cAAMhB,GAAG,CAACG,6BAA6B,CAACY,WAAW,CAACH,IAAZ,CAAiBG,WAAlB,CAA9B,CAAT;AACD;AACF,KAZD,MAYO;AACL,YAAMf,GAAG,CAACG,6BAA6B,CAAC,EAAD,CAA9B,CAAT;AACD;AACF,GAlBD,CAkBE,OAAOe,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF;AAED,OAAO,UAAUG,gBAAV,GAA6B;AAClC,QAAMpB,UAAU,CAACC,iBAAD,EAAoBI,gBAApB,CAAhB;AACD","sourcesContent":["import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { FETCH_RESTAURANTS } from \"./restaurants.actions\";\nimport { fetchRestaurantsSuccessAction } from \"./restaurants.actions\";\nimport CitiesApi from \"../../services/CitiesApi.js\";\nimport RestaurantsApi from \"../../services/RestaurantsApi.js\";\n\nexport function* fetchRestaurants(action) {\n  try {\n    const cities = yield call(CitiesApi.get, action.inputValue);\n    const city = cities.data.location_suggestions[0];\n    if (city) {\n      if (action.refineValue) {\n        const restaurants = yield call(\n          RestaurantsApi.get,\n          city.id,\n          action.refineValue\n        );\n        yield put(fetchRestaurantsSuccessAction(restaurants.data.restaurants));\n      } else {\n        const restaurants = yield call(RestaurantsApi.getMore, city.id);\n        yield put(fetchRestaurantsSuccessAction(restaurants.data.restaurants));\n      }\n    } else {\n      yield put(fetchRestaurantsSuccessAction([]));\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* watchRestaurants() {\n  yield takeLatest(FETCH_RESTAURANTS, fetchRestaurants);\n}\n"]},"metadata":{},"sourceType":"module"}